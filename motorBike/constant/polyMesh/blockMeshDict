/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.1.x                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 1;

gradIn 0.05;
gradOut 20;
gradOutEnd 40;

vertices
(
    (-23 -25 0)			//0
	(-1.414 -25 0)		//1
	( 1.414 -25 0)		//2
	( 40 -25 0)			//3
	
	(-23 -1.414 0)		//4
    (-1.414 -1.414 0)	//5
    ( 1.414 -1.414 0)	//6
	( 40 -1.414 0)		//7
		
    (-0.7071 -0.7071 0)	//8 inner box
    ( 0.7071 -0.7071 0)	//9
    (-0.7071  0.7071 0)	//10
    ( 0.7071  0.7071 0)	//11
    
	(-23 1.414 0)		//12
	(-1.414 1.414 0)	//13	
    ( 1.414 1.414 0)	//14	
    ( 40 1.414 0)		//15	
    
	(-23 25 0)			//16
	(-1.414 25 0)		//17
	( 1.414 25 0)		//18
	( 40 25 0)			//19

    (-23 -25 1)			
	(-1.414 -25 1)		
	( 1.414 -25 1)		
	( 40 -25 1)			
	
	(-23 -1.414 1)		
    (-1.414 -1.414 1)	
    ( 1.414 -1.414 1)	
	( 40 -1.414 1)		
		
    (-0.7071 -0.7071 1)
    ( 0.7071 -0.7071 1)	
    (-0.7071  0.7071 1)	
    ( 0.7071  0.7071 1)	
    
	(-23 1.414 1)		
	(-1.414 1.414 1)		
    ( 1.414 1.414 1)		
    ( 40 1.414 1)			
    
	(-23 25 1)			
	(-1.414 25 1)		
	( 1.414 25 1)		
	( 40 25 1)			
    

    
    
);

blocks
(
    hex (0 1 5 4 20 21 25 24)     (20 20 1) simpleGrading ($gradIn  $gradIn 1) 
    hex (1 2 6 5 21 22 26 25)     (50 20 1) simpleGrading (       1 $gradIn 1)
    hex (2 3 7 6 22 23 27 26)     (50 20 1) simpleGrading ($gradOutEnd $gradIn 1)
                                     
	hex (4 5 13 12 24 25 33 32)   (20 50 1)  simpleGrading ($gradIn         1 1)
    hex (5 8 10 13 25 28 30 33)   (50 50 1)  simpleGrading ($gradIn         1 1) 
    hex (5 6 9 8 25 26 29 28)     (50 50 1)  simpleGrading (       1 $gradIn  1)
    hex (9 6 14 11 29 26 34 31)   (50 50 1)  simpleGrading ($gradOut        1 1)
    hex (10 11 14 13 30 31 34 33) (50 50 1)  simpleGrading (       1 $gradOut 1)
    hex (6 7 15 14 26 27 35 34)   (50 50 1)  simpleGrading ($gradOutEnd        1 1)
                                    
	hex (12 13 17 16 32 33 37 36) (20 20 1) simpleGrading ($gradIn  $gradOut 1)
	hex (13 14 18 17 33 34 38 37) (50 20 1) simpleGrading (       1 $gradOut 1)
	hex (14 15 19 18 34 35 39 38) (50 20 1) simpleGrading ($gradOutEnd $gradOut 1)
	

);

edges
(
   arc 5 13   (-2 0 0)
   arc 25 33 (-2 0 1)
   arc 8 10   (-1 0 0)
   arc 28 30 (-1 0 1)

   arc 6 14  (2 0 0)
   arc 26 34 (2 0 1)
   arc 9 11   (1 0 0)
   arc 29 31 (1 0 1)

   arc 5 6   (0 -2 0)
   arc 25 26 (0 -2 1)
   arc 8 9   (0 -1 0)
   arc 28 29 (0 -1 1)

   arc 13 14 (0 2 0)
   arc 33 34 (0 2 1)
   arc 10 11 (0 1 0)
   arc 30 31 (0 1 1)

);

boundary
(
    inlet
    {
        type wall;
        faces
        (
            (4 0 20 24)
			(12 4 24 32)
			(16 12 32 36)
        );
    }
    
    outlet
    {
        type wall;
        faces
        (
            (3 7 27 23)
			(7 15 35 27)
			(15 19 39 35)
        );
    }
    
    top
    {
        type wall;
        faces
        (
            (17 16 36 37)
			(18 17 37 38)
			(19 18 38 39)
        );
    }
    
    bottom
    {
        type wall;
        faces
        (
            (0 1 21 20)
	    	(1 2 22 21)
			(2 3 23 22)
			
        );
    }
    
    cylinder
    {
        type wall;
        faces
        (
            (10 11 31 30)
	    	(11 9 29 31)
	    	(9 8 28 29)
	    	(8 10 30 28)
        );
    }
    
/*   defaultFaces
   {
        type empty;
        faces
        (
	    (5 6 4 3) //inner
	    (10 4 6 8)
            (9 10 8 7)
	    (9 7 5 3)
	    (3 4 1 0) //outer
	    (12 1 4 10)
	    (11 12 10 9)
	    (11 9 3 0)
	    (12 13 2 1)


	    (25 23 24 26)
	    (14 17 23 25)
	    (14 15 18 17)
	    (24 18 15 26)
	    (21 22 24 23)
	    (17 19 21 23)
	    (17 18 20 19)
	    (22 20 18 24)
	    (15 16 27 26)

        );
    }
*/
);

mergePatchPairs
(
);

// ************************************************************************* //